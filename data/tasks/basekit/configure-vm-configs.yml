---
- name: Stage OpenSpace base-kit assets on mgmt-kvm
  hosts: mgmt-kvm
  become: yes
  tasks:
    
    - name: Extract base-kit archive
      ansible.builtin.unarchive:
        src: "/data/images/{{ basekit}}"
        dest: "/var/lib/libvirt/config"
        extra_opts:
          - "--no-overwrite-dir"

    - name: Copy in libvirt config directory
      copy:
        src: "/data/images/openspace-base-kit-1.0.1/config"
        dest: "/var/lib/libvirt/config"
        owner: root
        group: root
        mode: "0755"

    - name: Create libvirt config directory tree
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: root
        mode: "0755"
      loop:
        - "/var/lib/libvirt/config/packages"
        - "/var/lib/libvirt/config/images"
        - "/var/lib/libvirt/config/vm_config/onboarder"
        - "/var/lib/libvirt/config/vm_config/mcm"
        - "/var/lib/libvirt/config/vm_config/osms"

    # ----- Stage images -----
    - name: Copy images to /var/lib/libvirt/config/images
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "/var/lib/libvirt/config/images/{{ item }}"
        remote_src: true
        mode: "0644"
      loop:
        - "/data/images/openpsace-base-kit/1.0.1/images/opnsense/OPNsense-24.7-dvd-amd64.iso"
        - "/data/images/openpsace-base-kit/1.0.1/images/onboarder_vm/onboarder-image-1.0.1.qcow2"
        - "/data/images/openpsace-base-kit/1.0.1/images/substrate/openspace-rocky94-substrate-template-1.5.1.qcow2"
        - "/data/images/openpsace-base-kit/1.0.1/images/rocky/Rocky-9.4-x86_64-dvd.iso"
        - "/data/images/9_5_hardened_image_vm.qcow2"

    # ----- Stage packages -----
    - name: Copy packages into /var/lib/libvirt/config/packages
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "/var/lib/libvirt/config/packages/{{ item }}"
        # Check owner/group/mode?
        owner: root
        group: root
        mode: "0644"
      loop:
        - "{{ onboarder }}"
        - "{{ osms }}"

    # ----- Generate SSH keypairs -----
    - name: Ensure SSH keypairs exist
      ansible.builtin.openssh_keypair:
        name: "{{ item.name }}"
        path: "{{ item.path }}"
        type: rsa
        size: 4096
        mode: "0600"
      loop:
        - { name: "onboarder", path: "{{ libvirt_cfg }}/vm_config/onboarder/onboarder_ssh_key" }
        - { name: "mcm",       path: "{{ libvirt_cfg }}/vm_config/mcm/rancher_ssh_key" }
        - { name: "osdc",      path: "{{ libvirt_cfg }}/vm_config/osdc/osdc_ssh_key" }
        - { name: "osms",      path: "{{ libvirt_cfg }}/vm_config/osms/osms_ssh_key" }

    - name: Read public keys
      ansible.builtin.slurp:
        src: "{{ item.pub }}"
      register: _pubkeys
      loop:
        - { var: "ONBOARDER_SSH_KEY", pub: "{{ libvirt_cfg }}/vm_config/onboarder/onboarder_ssh_key.pub" }
        - { var: "MCM_SSH_KEY",       pub: "{{ libvirt_cfg }}/vm_config/mcm/rancher_ssh_key.pub" }
        - { var: "OSDC_SSH_KEY",      pub: "{{ libvirt_cfg }}/vm_config/osdc/osdc_ssh_key.pub" }
        - { var: "OSMS_SSH_KEY",      pub: "{{ libvirt_cfg }}/vm_config/osms/osms_ssh_key.pub" }

    - name: Set facts for SSH public keys
      ansible.builtin.set_fact:
        "{{ item.0.var }}": "{{ item.1.content | b64decode | trim }}"
      loop: "{{ zip(_pubkeys.results | map(attribute='item') | list, _pubkeys.results | list) | list }}"
      loop_control:
        label: "{{ item.0.var }}"

    # ----- Build osdc kickstart (replace __PASSWORD__ with hashed value) -----
    - name: Copy OSDC provisioning KS template to target
      ansible.builtin.copy:
        src: "{{ basekit_root }}/config/vm_config/osdc/osdc_provisioning_vm_ks_template.cfg"
        dest: "{{ libvirt_cfg }}/vm_config/osdc/prov_vm_ks.cfg"
        remote_src: true
        mode: "0644"

    - name: Replace __PASSWORD__
      shell: |
        sed "s|__PASSWORD__|$(openssl passwd -6)|g" \
        {{ libvirt_cfg }}/vm_config/osdc/prov_vm_ks.cfg

    # ----- Cloud-init: copy meta/network and render user-data via envsubst-style -----
    - name: Copy cloud-init meta-data and network-config (onboarder)
      ansible.builtin.copy:
        src: "{{ basekit_root }}/config/cloud-init/onboarder/{{ item }}"
        dest: "{{ libvirt_cfg }}/cloud-init/onboarder/{{ item }}"
        remote_src: true
        mode: "0644"
      loop:
        - "meta-data"
        - "network-config"

    - name: Render cloud-init user-data (onboarder) with public key
      community.general.envsubst:
        path: "{{ basekit_root }}/config/cloud-init/onboarder/user-data"
        dest: "{{ libvirt_cfg }}/cloud-init/onboarder/user-data"
      environment:
        ONBOARDER_SSH_KEY: "{{ ONBOARDER_SSH_KEY }}"

    - name: Copy cloud-init meta-data and network-config (mcm)
      ansible.builtin.copy:
        src: "{{ basekit_root }}/config/cloud-init/mcm/{{ item }}"
        dest: "{{ libvirt_cfg }}/cloud-init/mcm/{{ item }}"
        remote_src: true
        mode: "0644"
      loop: 
        - "meta-data"
        - "network-config"

    - name: Render cloud-init user-data (mcm) with public key
      community.general.envsubst:
        path: "{{ basekit_root }}/config/cloud-init/mcm/user-data"
        dest: "{{ libvirt_cfg }}/cloud-init/mcm/user-data"
      environment:
        MCM_SSH_KEY: "{{ MCM_SSH_KEY }}"

    - name: Copy cloud-init meta-data and network-config (osms)
      ansible.builtin.copy:
        src: "{{ basekit_root }}/config/cloud-init/osms/{{ item }}"
        dest: "{{ libvirt_cfg }}/cloud-init/osms/{{ item }}"
        remote_src: true
        mode: "0644"
      loop:
        - "meta-data"
        - "network-config"

    - name: Render cloud-init user-data (osms) with public key
      community.general.envsubst:
        path: "{{ basekit_root }}/config/cloud-init/osms/user-data"
        dest: "{{ libvirt_cfg }}/cloud-init/osms/user-data"
      environment:
        OSMS_SSH_KEY: "{{ OSMS_SSH_KEY }}"
