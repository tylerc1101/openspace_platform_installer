---
- name: Generate OPNsense configuration file
  hosts: localhost
  gather_facts: no
  connection: local
  
  vars:
    env_name: "{{ env_name | mandatory }}"
    output_dir: "/install/usr_home/{{ env_name }}/generated_files"
    output_file: "{{ output_dir }}/config.xml"
    template_file: "/install/data/templates/opnsense/config.xml.j2"
    
  tasks:
    - name: Display generation info
      debug:
        msg:
          - "Generating OPNsense config.xml"
          - "Environment: {{ env_name }}"
          - "Output: {{ output_file }}"
    
    - name: Ensure output directory exists
      file:
        path: "{{ output_dir }}"
        state: directory
        mode: '0755'
    
    - name: Load inventory to get all variables
      set_fact:
        # These will be available from the inventory
        domain_name: "{{ domain_name }}"
        customer_network: "{{ customer_network }}"
        mgmt_network: "{{ mgmt_network }}"
        bmc_network: "{{ bmc_network | default({'network': '192.168.0.0', 'cidr': '/24', 'gateway': '192.168.0.1'}) }}"
        ntp: "{{ ntp }}"
        opnsense: "{{ opnsense }}"
    
    - name: Generate config.xml from template
      template:
        src: "{{ template_file }}"
        dest: "{{ output_file }}"
        mode: '0644'
    
    - name: Validate XML syntax
      command: xmllint --noout "{{ output_file }}"
      changed_when: false
      ignore_errors: yes
      register: xml_validation
    
    - name: Display validation result
      debug:
        msg: "✅ config.xml generated and validated successfully"
      when: xml_validation.rc == 0
    
    - name: Display warning if validation failed
      debug:
        msg: "⚠️ config.xml generated but XML validation failed (xmllint not available or XML invalid)"
      when: xml_validation.rc != 0
    
    - name: Display next steps
      debug:
        msg:
          - "config.xml generated at: {{ output_file }}"
          - "This file will be deployed to OPNsense during the deploy_opnsense step"