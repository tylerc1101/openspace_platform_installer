- name: Prep Onboarder Container
  hosts: "{{ target_hosts | default('localhost')}}"
  vars:
    env_name: "{{ env_name | mandatory }}"
    config_dir: "/docker-workspace/config"
    cluster_dir: "{{ config_dir }}/{{ env_name }}"
    sample_vsphere_dir: "{{ config_dir }}/sample-vsphere"
    cache_dir: "{{ cluster_dir }}/.cache"
    ssh_user: "{{ hostvars['mcm'].ansible_user }}"
    common_dir: "{{ config_dir }}/common"
  
  tasks:
    # a) Build directories
    - name: Check if "{{ cluster_dir }}" directory exists inside container
      stat:
        path: "{{ cluster_dir }}"
      register: target_dir

    - name: Copy sample config if missing
      copy:
        src: "{{ sample_vsphere_dir }}/"
        dest: "{{ cluster_dir }}"
      when: not target_dir.stat.exists

    - name: Ensure .cache directory exists
      file:
        path: "{{ cache_dir }}"
        state: directory
        mode: '0755'
        owner: root
        group: root

    # b) Modify Makefiles
    - name: Deploy Makefile
      template:
        src: /install/data/templates/basekit_makefile.j2
        dest: "{{ cluster_dir }}/Makefile"
        owner: root
        group: root
        mode: '0644'

    - name: Modify common Makefile inside container
      lineinfile:
        path: "{{ common_dir }}/Makefile"
        regexp: "{{ item.regexp }}"
        line: "{{ item.replacement }}"
        backrefs: yes
      loop:
        - { regexp: '^(SSH_USERNAME\s*\?=).*',      replacement: '\1 {{ ssh_user }}' }
        - { regexp: '^(SSH_KEY_FILE_NAME\s*\?=).*', replacement: '\1 rancher_ssh_key' }
        - { regexp: '^(VM_NIC_INTERFACE\s*\?=).*',  replacement: '\1 enp1s0' }

    # c) Create terraform state file
    - name: Create vm-terraform.tfstate inside container
      template:
        src: /install/data/templates/basekit_vm-terraform.tfstate.j2
        dest: "{{ cache_dir }}/vm-terraform.tfstate"
        owner: root
        group: root
        mode: '0644'

    # d) Copy SSH Key into cache dir
    - name: Copy ssh_key into .cache directory
      copy:
        src: "/docker-workspace/config/{{ env_name }}/.ssh/rancher_ssh_key"
        dest: "{{ cache_dir }}/rancher_ssh_key"
        owner: root
        group: root
        mode: '0600'